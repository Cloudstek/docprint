// @flow

export function sanitize(input: Array<any>) {
    return input.filter(a => a);
}

export function capitalize(str: ?string) {
    return str && str.charAt(0).toUpperCase() + str.slice(1);
}

export function at(o: ?Object, path: ?string, def: ?any): any {
    if (!o || !path) {
        return o;
    }

    let pointer = o;
    let failed = false;

    for (let p of path.split('.')) {
        if (pointer[p] !== null && pointer[p] !== undefined && !failed) {
            pointer = pointer[p];
        } else {
            failed = true;
        }
    }

    return failed ? (o[path] || def) : pointer;
}

export function stripSlash(str: ?string) {
    if (str && str.endsWith('/')) {
        return str.substr(0, str.length - 1);
    }

    return str;
}

export function slugify(str: string) {
    return str && str.toLowerCase()
        .replace(/\s+/g, '-')
        .replace(/[^\w-]+/g, '')
        .replace(/--+/g, '-')
        .replace(/^-+/, '')
        .replace(/-+$/, '');
}
